{"ast":null,"code":"var _jsxFileName = \"/Users/ryanarafeh/Desktop/Projects/Shift/client/src/pages/Employees.js\";\nimport Modal from \"react-modal\";\nimport React, { useState } from \"react\";\n\n// Define the AddEventModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Employees = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setModalIsOpen(true),\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleClearEvents,\n        children: \"Clear All Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalIsOpen,\n      onClose: () => setModalIsOpen(false),\n      onEventAdded: handleAddEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = Employees;\nvar _c;\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["Modal","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Employees","children","className","onClick","setModalIsOpen","fileName","_jsxFileName","lineNumber","columnNumber","handleClearEvents","AddEventModal","isOpen","modalIsOpen","onClose","onEventAdded","handleAddEvent","_c","$RefreshReg$"],"sources":["/Users/ryanarafeh/Desktop/Projects/Shift/client/src/pages/Employees.js"],"sourcesContent":["import Modal from \"react-modal\";\nimport React, { useState } from \"react\";\n\n// Define the AddEventModal component\nconst Employees = () => {\n    return (\n        <>\n            {/* buttons to add events and clear events */}\n            <div className=\"button-container\">\n                <button className=\"button\" onClick={() => setModalIsOpen(true)}>Add Employee</button>\n                <button className=\"button\" onClick={handleClearEvents}>Clear All Employees</button>\n            </div>\n\n            {/* modal component for adding new events */}\n\n            <AddEventModal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)} onEventAdded={handleAddEvent} />\n        </>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACpB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBAEIJ,OAAA;MAAKK,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7BJ,OAAA;QAAQK,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMC,cAAc,CAAC,IAAI,CAAE;QAAAH,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFX,OAAA;QAAQK,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEM,iBAAkB;QAAAR,QAAA,EAAC;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAINX,OAAA,CAACa,aAAa;MAACC,MAAM,EAAEC,WAAY;MAACC,OAAO,EAAEA,CAAA,KAAMT,cAAc,CAAC,KAAK,CAAE;MAACU,YAAY,EAAEC;IAAe;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC5G,CAAC;AAEX,CAAC;AAAAQ,EAAA,GAdKhB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}