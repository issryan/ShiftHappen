{"ast":null,"code":"var _jsxFileName = \"/Users/ryanarafeh/Desktop/Projects/Shift/client/src/pages/Employees.js\",\n  _s = $RefreshSig$();\nimport Modal from \"react-modal\";\nimport React, { useState } from \"react\";\n\n// Define the AddEventModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEventModal({\n  isOpen,\n  onClose,\n  onEventAdded\n}) {\n  _s();\n  // Define the title and daysOfWeek state using the useState hook\n  const [title, setTitle] = useState(\"\");\n  const [daysOfWeek, setDaysOfWeek] = useState([]);\n\n  // Define the onSubmit handler\n  const onSubmit = event => {\n    event.preventDefault();\n    const newEvent = {\n      title,\n      daysOfWeek\n    };\n    // Call the onEventAdded callback with the new event object\n    onEventAdded(newEvent);\n    // Reset the title and daysOfWeek state and close the modal\n    setTitle(\"\");\n    setDaysOfWeek([]);\n    onClose();\n  };\n\n  // Render the modal component\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setModalIsOpen(true),\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleClearEvents,\n        children: \"Clear All Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalIsOpen,\n      onClose: () => setModalIsOpen(false),\n      onEventAdded: handleAddEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(AddEventModal, \"lLdlW/TVIyQRCji53VBOa/xqBp8=\");\n_c = AddEventModal;\nvar _c;\n$RefreshReg$(_c, \"AddEventModal\");","map":{"version":3,"names":["Modal","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","AddEventModal","isOpen","onClose","onEventAdded","_s","title","setTitle","daysOfWeek","setDaysOfWeek","onSubmit","event","preventDefault","newEvent","children","className","onClick","setModalIsOpen","fileName","_jsxFileName","lineNumber","columnNumber","handleClearEvents","modalIsOpen","handleAddEvent","_c","$RefreshReg$"],"sources":["/Users/ryanarafeh/Desktop/Projects/Shift/client/src/pages/Employees.js"],"sourcesContent":["import Modal from \"react-modal\";\nimport React, { useState } from \"react\";\n\n// Define the AddEventModal component\nexport default function AddEventModal({ isOpen, onClose, onEventAdded }) {\n  // Define the title and daysOfWeek state using the useState hook\n  const [title, setTitle] = useState(\"\");\n  const [daysOfWeek, setDaysOfWeek] = useState([]);\n\n  // Define the onSubmit handler\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const newEvent = { title, daysOfWeek };\n    // Call the onEventAdded callback with the new event object\n    onEventAdded(newEvent);\n    // Reset the title and daysOfWeek state and close the modal\n    setTitle(\"\");\n    setDaysOfWeek([]);\n    onClose();\n  };\n\n  // Render the modal component\n  return (\n    <>\n     {/* buttons to add events and clear events */}\n     <div className=\"button-container\">\n        <button className=\"button\" onClick={() => setModalIsOpen(true)}>Add Employee</button>\n        <button className=\"button\" onClick={handleClearEvents}>Clear All Employees</button>\n      </div>\n\n      {/* modal component for adding new events */}\n\n      <AddEventModal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)} onEventAdded={handleAddEvent} />\n</>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,aAAaA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACvE;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMc,QAAQ,GAAIC,KAAK,IAAK;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG;MAAEP,KAAK;MAAEE;IAAW,CAAC;IACtC;IACAJ,YAAY,CAACS,QAAQ,CAAC;IACtB;IACAN,QAAQ,CAAC,EAAE,CAAC;IACZE,aAAa,CAAC,EAAE,CAAC;IACjBN,OAAO,CAAC,CAAC;EACX,CAAC;;EAED;EACA,oBACEL,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBAEChB,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC9BhB,OAAA;QAAQiB,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMC,cAAc,CAAC,IAAI,CAAE;QAAAH,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFvB,OAAA;QAAQiB,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEM,iBAAkB;QAAAR,QAAA,EAAC;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,eAINvB,OAAA,CAACG,aAAa;MAACC,MAAM,EAAEqB,WAAY;MAACpB,OAAO,EAAEA,CAAA,KAAMc,cAAc,CAAC,KAAK,CAAE;MAACb,YAAY,EAAEoB;IAAe;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC9G,CAAC;AAEH;AAAChB,EAAA,CA/BuBJ,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}