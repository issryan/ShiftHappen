{"ast":null,"code":"var _jsxFileName = \"/Users/ryanarafeh/Desktop/Projects/Shift/client/src/pages/Employees.jsx\",\n  _s = $RefreshSig$();\nimport Modal from \"react-modal\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport AddEventModal from \"../components/AddEventModal\";\n\n// Define the AddEventModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Employees = () => {\n  _s();\n  // create references for calendar and external events\n  const calendarRef = useRef(null);\n  const externalEventsRef = useRef(null);\n\n  // create references for checkbox and modal state\n  const checkboxRef = useRef(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // create state for external events\n  const [externalEvents, setExternalEvents] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setModalIsOpen(true),\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleClearEvents,\n        children: \"Clear All Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n      isOpen: modalIsOpen,\n      onClose: () => setModalIsOpen(false),\n      onEventAdded: handleAddEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Employees, \"mvB5bx/9siIYSXBN6HIk92DWbTw=\");\n_c = Employees;\nvar _c;\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["Modal","React","useState","useEffect","useRef","AddEventModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Employees","_s","calendarRef","externalEventsRef","checkboxRef","modalIsOpen","setModalIsOpen","externalEvents","setExternalEvents","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleClearEvents","isOpen","onClose","onEventAdded","handleAddEvent","_c","$RefreshReg$"],"sources":["/Users/ryanarafeh/Desktop/Projects/Shift/client/src/pages/Employees.jsx"],"sourcesContent":["import Modal from \"react-modal\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport AddEventModal from \"../components/AddEventModal\";\n\n// Define the AddEventModal component\nconst Employees = () => {\n\n     // create references for calendar and external events\n  const calendarRef = useRef(null);\n  const externalEventsRef = useRef(null);\n  \n\n  // create references for checkbox and modal state\n  const checkboxRef = useRef(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  // create state for external events\n  const [externalEvents, setExternalEvents] = useState([]);\n    \n    return (\n        <>\n            {/* buttons to add events and clear events */}\n            <div className=\"button-container\">\n                <button className=\"button\" onClick={() => setModalIsOpen(true)}>Add Employee</button>\n                <button className=\"button\" onClick={handleClearEvents}>Clear All Employees</button>\n            </div>\n\n            {/* modal component for adding new events */}\n\n            <AddEventModal isOpen={modalIsOpen} onClose={() => setModalIsOpen(false)} onEventAdded={handleAddEvent} />\n        </>\n    );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,6BAA6B;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB;EACH,MAAMC,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMS,iBAAiB,GAAGT,MAAM,CAAC,IAAI,CAAC;;EAGtC;EACA,MAAMU,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtD,oBACIK,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAEIZ,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7BZ,OAAA;QAAQa,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAML,cAAc,CAAC,IAAI,CAAE;QAAAG,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrFlB,OAAA;QAAQa,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEK,iBAAkB;QAAAP,QAAA,EAAC;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAINlB,OAAA,CAACF,aAAa;MAACsB,MAAM,EAAEZ,WAAY;MAACa,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAAC,KAAK,CAAE;MAACa,YAAY,EAAEC;IAAe;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC5G,CAAC;AAEX,CAAC;AAAAd,EAAA,CA3BKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}